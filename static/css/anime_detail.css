.content {
    flex-direction: row;
    align-items: flex-start;
    margin: 0 auto;
    max-width: 90vw;
    flex-wrap: wrap;
}

li {
    list-style: none;
}

.anime_detail {
    flex: 1 0 auto;
    width: 70vw;
    margin-right: 20px;
}

.anime_detail .slideshow {
    position: relative;
    border: 1px solid;
    margin: 10px auto;
    width: fit-content;
    display: flex;
}

.anime_detail .slideshow svg {
    background-color: rgba(0, 0, 0, 0.6);
    height: 32px;
}

.anime_detail .slideshow svg:hover {
    background-color: rgba(0, 0, 0, 0.8);
    cursor: pointer;
}

.anime_detail .slideshow .previous,
.anime_detail .slideshow .next {
    position: absolute;
    width: 32px;
    height: 100%;
    top: 0;
    display: flex;
    align-items: center;
}

.anime_detail .slideshow .next {
    right: 0;
}

.anime_detail .tags {
    display: flex;
    flex-wrap: wrap;
    width: fit-content;
    margin: 10px auto;
}

.anime_detail .tag {
    padding: 3px 5px;
    margin: 2px;
}

.anime_detail .tag:hover {
    filter: brightness(140%);
    transition: var(--universal-transition);
}

.anime_detail .tag span {
    background: inherit;
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    filter: invert(1) grayscale(1) contrast(100);
}

.episodes_container {
    width: calc(100% + 10px);
    max-height: calc(100vh - 200px);
    overflow: hidden auto;
}

.version {
    width: 100%;
    padding: 5px 10px;
    background-color: var(--header-back-color);
}

.season {
    width: 100%;
    padding: 5px 15px 5px 5px;
    background-color: var(--secondary-back-color);

    display: flex;
}

.season svg {
    rotate: 0deg;
    transition: all 0.2s linear;
}

.season.selected svg {
    rotate: 90deg;
    transition: all 0.2s linear;
}

.season:hover {
    cursor: pointer;
}

.episode {
    width: 100%;
    padding: 5px 10px;
}

.episodes {
    margin: 0;
    max-height: 100vh;
    transition: all 0.4s linear;
}

.toggled_off {
    max-height: 0;
    overflow: hidden;
    transition: all 0.4s linear;
}
